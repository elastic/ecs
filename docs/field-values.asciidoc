
[[ecs-category-field-values-reference]]
== {ecs} Category Field Values

At a high level, ECS provides fields to capture two types of event information:
"Where it's from" (e.g., `event.module`, `event.dataset`, `agent.type`, `observer.type`, etc.),
and "What it is." Categorization Fields hold the "What it is" information.

ECS defines four Categorization Fields for this purpose, each of which falls under the `event.*` field set.

[float]
[[ecs-category-fields]]
=== Categorization Fields

* <<ecs-allowed-values-event-kind,event.kind>>
* <<ecs-allowed-values-event-category,event.category>>
* <<ecs-allowed-values-event-type,event.type>>
* <<ecs-allowed-values-event-outcome,event.outcome>>


[[ecs-allowed-values-event-kind]]
=== Allowed Values for event.kind

The kind of the event.

This gives information about what type of information the event contains, without being specific to the contents of the event.

NOTE: *Warning*: Only allowed Categorization Field values listed in the ECS repository
and official ECS documentation should be considered official.
Use of any other values may result in incompatible implementations
that will require subsequent breaking changes.

*Table of Contents*

* <<ecs-event-kind-alert,alert>>
* <<ecs-event-kind-event,event>>
* <<ecs-event-kind-metric,metric>>
* <<ecs-event-kind-state,state>>
* <<ecs-event-kind-pipeline_error,pipeline_error>>
* <<ecs-event-kind-signal,signal>>

[float]
[[ecs-event-kind-alert]]
==== alert

`event.kind:alert` indicates an event that describes an alert. Alerts are often associated with detection rules. `event.kind:alert` is often populated for events coming from firewalls, intrusion detection systems, endpoint detection and response systems, etc. It is used to indicate that an alert was triggered.




[float]
[[ecs-event-kind-event]]
==== event

It may sound a bit redundant, but `event.kind:event` is the most general and most common value of this field. It is used to represent events that indicate that something happened.




[float]
[[ecs-event-kind-metric]]
==== metric

Used to indicate that this event is a measurement taken at given point in time. Examples include CPU utilization, memory usage, or a vulnerability scan result. Events with `event.kind:metric` indicate that a measurement was taken.




[float]
[[ecs-event-kind-state]]
==== state

Similar to metric, except that the entity being measured does not provide a numeric metric value, but rather one of a fixed set of conditions or states. For example a periodic event reporting a "fin_wait" state of a TCP connection on a host might use `event.type:state`.




[float]
[[ecs-event-kind-pipeline_error]]
==== pipeline_error

This value indicates that an error occurred during the ingestion of this event, and that event data may be missing, inconsistent, or incorrect. `event.kind:pipeline_error` is often associated with parsing errors.




[float]
[[ecs-event-kind-signal]]
==== signal

The signal value is used by Elastic Kibana apps, such as SIEM, for app-specific purposes. `event.kind:signal` is thus reserved and should not be used for the ingestion of events into Elasticsearch.




[[ecs-allowed-values-event-category]]
=== Allowed Values for event.category

Event category.

This contains high-level information about the contents of the event. It is more generic than `event.action`, in the sense that typically a category contains multiple actions.

NOTE: *Warning*: Only allowed Categorization Field values listed in the ECS repository
and official ECS documentation should be considered official.
Use of any other values may result in incompatible implementations
that will require subsequent breaking changes.

*Table of Contents*

* <<ecs-event-category-authentication,authentication>>
* <<ecs-event-category-database,database>>
* <<ecs-event-category-driver,driver>>
* <<ecs-event-category-file,file>>
* <<ecs-event-category-host,host>>
* <<ecs-event-category-intrusion_detection,intrusion_detection>>
* <<ecs-event-category-malware,malware>>
* <<ecs-event-category-package,package>>
* <<ecs-event-category-process,process>>
* <<ecs-event-category-web,web>>

[float]
[[ecs-event-category-authentication]]
==== authentication

Events in this category are related to the challenge and response process in which credentials are supplied and verified to allow the creation of a session. Common sources for these logs are Windows Event logs, ssh logs, etc. Visualize and analyze events in this category to look for unusual login activity, failed logins, etc.



*Expected event types for category authentication:*

allow, deny, info


[float]
[[ecs-event-category-database]]
==== database

The database category denotes events and metrics relating to a data storage and retrieval system. Note that use of this category is not limited to relational database systems. Examples include event logs from MS SQL, MySQL, Elasticsearch, MongoDB, etc. Use this category to visualize and analyze database activity such as accesses and changes.



*Expected event types for category database:*

access, change, info, error


[float]
[[ecs-event-category-driver]]
==== driver

Having to do operating system device drivers and similar software entities such as Windows drivers, kernel extensions, kernel modules, etc. Use events and metrics in this category to visualize and analyze driver-related activity and status on hosts.



*Expected event types for category driver:*

change, end, info, start


[float]
[[ecs-event-category-file]]
==== file

Relating to a set of information that has been created on, or has existed on a filesystem. Use this category of events to visualize and analyze the creation, access, permissions, transfers, and deletions of files. Events in this category can come from both host-based and network-based sources. An example source of a network-based detection of a file transfer would be the Zeek file.log.



*Expected event types for category file:*

change, creation, deletion, info


[float]
[[ecs-event-category-host]]
==== host

Events and metrics about hosts. Usually higher-level information about host activity from an external perspective. Different than operating system in the sense that events are usually externally visible and independent from the OS. "host" events are not meant to capture events that are simply "happening on a host". Use this category to visualize and analyze inventories of hosts, starting and ending of hosts, etc.



*Expected event types for category host:*

access, change, end, info, start


[float]
[[ecs-event-category-intrusion_detection]]
==== intrusion_detection

Relating to intrusion detections from IDS/IPS systems and functions, both network and host-based. Use this category to visualize and analyze intrusion detection alerts from systems such as Snort, Suricata, and Palo Alto threat detections.



*Expected event types for category intrusion_detection:*

info


[float]
[[ecs-event-category-malware]]
==== malware

Malware detection events and alerts. Use this category to visualize and analyze malware detections from EDR/EPP systems such as Elastic Endpoint Security, Symantec Endpoint Protection, Crowdstrike, and network IDS/IPS systems and functions such as Palo Alto Networks threat and Wildfire logs.



*Expected event types for category malware:*

info


[float]
[[ecs-event-category-package]]
==== package

Relating to software packages installed on hosts. Use this category to visualize and analyze inventory of software installed on various hosts, or to determine host vulnerability in the absence of vulnerability scan data.



*Expected event types for category package:*

access, change, deletion, info, installation, start


[float]
[[ecs-event-category-process]]
==== process

Relating to the operation of software processes executing within operating systems on hosts. Use this category of events to visualize and analyze process starts, process parents, process relationships, etc.



*Expected event types for category process:*

access, change, end, info, start


[float]
[[ecs-event-category-web]]
==== web

Relating to web server access. Use this category to create a dashboard of web server/proxy activity from apache, IIS, nginx web servers, etc. Note: events from network observers such as Zeek http log may also be included in this category.



*Expected event types for category web:*

access, error, info


[[ecs-allowed-values-event-type]]
=== Allowed Values for event.type

Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.

NOTE: *Warning*: Only allowed Categorization Field values listed in the ECS repository
and official ECS documentation should be considered official.
Use of any other values may result in incompatible implementations
that will require subsequent breaking changes.

*Table of Contents*

* <<ecs-event-type-access,access>>
* <<ecs-event-type-allowed,allowed>>
* <<ecs-event-type-change,change>>
* <<ecs-event-type-creation,creation>>
* <<ecs-event-type-deletion,deletion>>
* <<ecs-event-type-denied,denied>>
* <<ecs-event-type-end,end>>
* <<ecs-event-type-error,error>>
* <<ecs-event-type-info,info>>
* <<ecs-event-type-installation,installation>>
* <<ecs-event-type-protocol,protocol>>
* <<ecs-event-type-start,start>>

[float]
[[ecs-event-type-access]]
==== access

The access event type is used for the subset of events within a category that indicate that something was accessed. Common examples include `event.category:database AND event.type:access`, or `event.category:file AND event.type:access`. Note for file access, include both directory listings and file opens in this subcategory. You can further distinguish access operations using the ECS `event.action` field.




[float]
[[ecs-event-type-allowed]]
==== allowed

The allow event type is used for the subset of events within a category that indicate that something was allowed. Common examples include `event.category:network AND event.type:allow` to indicate a network firewall event for which the firewall disposition was to allow the connection to complete. `event.category:network_flow AND event.type:allow` to indicate a network flow event that is also a network firewall event for which the firewall disposition was to allow the connection to complete.




[float]
[[ecs-event-type-change]]
==== change

The change event type is used for the subset of events within a category that indicate that something has changed. If semantics best describe an event as modified, then include them in this subcategory. Common examples include `event.category:registry AND event.type:change`, and `event.category:file AND event.type:change`. You can further distinguish change operations using the ECS `event.action` field.




[float]
[[ecs-event-type-creation]]
==== creation

The create event type is used for the subset of events within a category that indicate that something was created. A common example is `event.category:file AND event.type:create`.




[float]
[[ecs-event-type-deletion]]
==== deletion

The delete event type is used for the subset of events within a category that indicate that something was deleted. Common examples include `event.category:file AND event.type:delete`, and `event.category:iam_user AND event.type:delete`, to indicate that a user has been deleted from an Identity and Access Management system.




[float]
[[ecs-event-type-denied]]
==== denied

The deny event type is used for the subset of events within a category that indicate that something was disallowed, blocked or denied. Common examples include `event.category:network AND event.type:deny` to indicate a network firewall event for which the firewall disposition was to deny the connection to complete. `event.category:network_flow AND event.type:deny` to indicate a network flow event that is also a network firewall event for which the firewall disposition was to deny the connection to complete. Note that the `event.action` field can be used to further describe the deny action with user-supplied values such as "drop", "reject", "block", "redirect", etc.




[float]
[[ecs-event-type-end]]
==== end

The end event type is used for the subset of events within a category that indicate something has ended. Common examples include `event.category:process AND event.type:end`, and `event.category:network_flow AND event.type:end` to indicate a flow record event that is sent at the completion of the network flow.




[float]
[[ecs-event-type-error]]
==== error

The error event type is used for the subset of events within a category that indicate or describe an error. Common examples include `event.category:application AND event.type:error` and `event.category:database AND event.type:error`. Note that pipeline errors that occur during the event ingestion process should not use this `event.type` value. Instead, they should use the `event.kind:pipeline_error`.




[float]
[[ecs-event-type-info]]
==== info

The info event type is used for the subset of events within a category that indicate that they are purely informational, and don't report a state change, action. For example, an initial run of a file integrity monitoring system (FIM) where an agent reports all files under management would fall into the "info" subcategory. Similarly, a dump of all current running processes (as opposed to reporting that process start/end) would fall into the "info" subcategory. Additional common examples include `event.category:registry AND event.type:info`, and `event.category:intrusion_detection AND event.type:info`.




[float]
[[ecs-event-type-installation]]
==== installation

The install event type is used for the subset of events within a category that indicate that something was installed. A common example is `event.category:package` AND `event.type:install`.




[float]
[[ecs-event-type-protocol]]
==== protocol

The protocol event type is used for the subset of events within a category that indicate that they contain protocol details or analysis. Generally, network traffic and network flows that contain protocol details will fall into this subcategory. Common examples include `event.category:network AND event.type:protocol`, and `event.category:network_flow AND event.type:protocol`. Note for when the protocol subcategory is used, you can further distinguish protocols using the ECS `network.protocol` field.




[float]
[[ecs-event-type-start]]
==== start

The start event type is used for the subset of events within a category that indicate something has started. A common example is `event.category:process AND event.type:start`.




[[ecs-allowed-values-event-outcome]]
=== Allowed Values for event.outcome

The outcome of the event.

If the event describes an action, this fields contains the outcome of that action.

NOTE: *Warning*: Only allowed Categorization Field values listed in the ECS repository
and official ECS documentation should be considered official.
Use of any other values may result in incompatible implementations
that will require subsequent breaking changes.

*Table of Contents*

* <<ecs-event-outcome-failure,failure>>
* <<ecs-event-outcome-success,success>>
* <<ecs-event-outcome-unknown,unknown>>

[float]
[[ecs-event-outcome-failure]]
==== failure

Indicates that this event describes a failed result. A common example is `event.category:file AND event.type:access AND event.outcome:failure` to indicate that a file access was attempted, but was not successful.




[float]
[[ecs-event-outcome-success]]
==== success

Indicates that this event describes a successful result.  A common example is `event.category:file AND event.type:create AND event.outcome:success` to indicate that a file was successfully created.




[float]
[[ecs-event-outcome-unknown]]
==== unknown

Indicates that this event describes only an attempt for which the result is unknown. For example, if the event contains information only about a request in an entity transaction that usually results in a response, populating `event.outcome:unknown` is appropriate.



